<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gadgets | Yinette's Webshite]]></title>
  <link href="http://yinette.github.io/blog/categories/gadgets/atom.xml" rel="self"/>
  <link href="http://yinette.github.io/"/>
  <updated>2014-09-23T21:22:18+10:00</updated>
  <id>http://yinette.github.io/</id>
  <author>
    <name><![CDATA[Yinette]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Project AWACS]]></title>
    <link href="http://yinette.github.io/blog/2014/07/31/project-awacs/"/>
    <updated>2014-07-31T17:49:24+10:00</updated>
    <id>http://yinette.github.io/blog/2014/07/31/project-awacs</id>
    <content type="html"><![CDATA[<h2>Project AWACS</h2>

<p><img src="http://upload.wikimedia.org/wikipedia/commons/9/9a/Boeing_E-3_Sentry_LX-N_90454-3.JPG" alt="E3 Sentry AWACS" />
(image from Wikipedia)</p>

<p>I had a requirement for 4G on the go that doesn&rsquo;t cost me $40,000,000 a year to run&hellip; Telstra&rsquo;s Voice and Data Pre-Paid sucks for price.</p>

<p>I wanted something I could use on the way to and from work, and whenever I was out. Something that was low-power and could sit in my bag.</p>

<p><strong>UPDATE</strong> I fixed the issue where the usb modem would not show itself as an interface at boot, check the end of the post to find the fix!</p>

<h3>Why AWACS?</h3>

<p>I have massive planespergers&hellip; From wikipedia:</p>

<p>AWACS or Airborne Warning and Control System is an airborne radar picket system designed to detect aircraft,
ships and vehicles at long ranges and perform control and command of the battle space in an air engagement by directing fighter and
attack aircraft strikes.</p>

<p>I usually name my Wireless stuff after Airforce related things, Such as TACAMO (TAke COmmand And Move Out &ndash; Nuclear war survivable communications) for my Mobile Phone tether, and Callsigns for static Access Points, such as &ldquo;Mainsail&rdquo; and &ldquo;Skyking&rdquo;</p>

<h3>The Setup:</h3>

<p><img src="http://yinette.beta.anchortrove.com/IMG_20140730_150239.jpg" alt="Hardware!" /></p>

<p><strong>1x TP-Link TL-MR3020 Mobile Access Point</strong> &ndash; <a href="http://wiki.openwrt.org/toh/tp-link/tl-mr3020">http://wiki.openwrt.org/toh/tp-link/tl-mr3020</a>
  &ndash; Atheros AR7240 MIPS Processor @ 400MHz
  &ndash; 32M RAM
  &ndash; 4M Flash (yes, very tight&hellip;)
  &ndash; 1x USB, 1x Mini-USB (for power input)
  &ndash; 1x 10/100 Ethernet (for un-fucking with ThinkPad)</p>

<p><strong>1x ZTE MF823 LTE/UMTS USB Modem</strong> &ndash; <a href="http://zte.com.au/telstra/MF823.htm">http://zte.com.au/telstra/MF823.htm</a>
  &ndash; Has an ARMv7 SoC and runs a Linux Kernel as I found out. (Had root on it less than 10 minutes after it being delivered)</p>

<p><strong>1x Mini-Gorilla Battery Pack.</strong> <a href="https://www.powertraveller.com/en/shop/portable-chargers/professional/minigorilla/">https://www.powertraveller.com/en/shop/portable-chargers/professional/minigorilla/</a></p>

<p>So, firstly, I needed to Install OpenWRT on the TP-Link, this was fairly straight forward with the trunk versions known as Barrier Breaker. TP-Link are bros that don&rsquo;t dick you around in giving access to the hardware you own, so it was as simple as feeding it OpenWRT as a Firmware Upgrade via the Web Interface :)</p>

<p>Once installed, I opkg&rsquo;d the niceties and requirements after getting it connected up to my work&rsquo;s non-priveleged wireless :3</p>

<pre><code>opkg update; opkg install ip kmod-usb-net kmod-usb-net-rndis kmod-usb-net-cdc-ether usbutils udev
</code></pre>

<p>This will get you the nice new IP tools, as well as all the kernel modules and software required to tether to the ZTE Modem (Which will present itself like an Ethernet Adaptor over USB)</p>

<p>Once Telstra was kind enough to deliver my USB Modem (ok, it wasn&rsquo;t that bad) I registered it up, and put on 10G that will stay active for 90 days, none of this 30 day bullshit with voice and data. You pay more up-front, but it will last you.</p>

<p>Once all together, we tell the AP what to do:</p>

<p>Since we cannot fit a web interface or let alone luci on this bee&rsquo;s dick of a flash storage, we need to use the OpenWRT CLI configuration utility <code>uci</code></p>

<p>(Alternatively, you can edit shit directly in <code>/etc/config/network</code>)</p>

<pre><code>uci set wireless.@wifi-iface[0]=wifi-iface
uci set wireless.@wifi-iface[0].device=radio1
uci set wireless.@wifi-iface[0].mode=ap
uci set wireless.@wifi-iface[0].network=wan
uci set wireless.@wifi-iface[0].key=&lt;GOOD PASSPHRASE&gt;
uci set wireless.@wifi-iface[0].ssid=&lt;AN SSID&gt; (i use AWACS)
uci set wireless.@wifi-iface[0].encryption=psk2+ccmp
</code></pre>

<p>once satisfied, commit changes.</p>

<p><code>uci commit</code></p>

<p>Following this will get your USB Tether up and going &ndash; <a href="http://wiki.openwrt.org/doc/howto/usb.tethering">http://wiki.openwrt.org/doc/howto/usb.tethering</a></p>

<p>the tl;dr:</p>

<pre><code>uci del network.wan
uci set network.wan=interface
uci set network.wan.ifname=usb0
uci set network.wan.proto=dhcp
uci commit network
</code></pre>

<p>and</p>

<pre><code>ifup wan
</code></pre>

<h3>How does it go?</h3>

<p>Overall, I&rsquo;m very impressed how it has turned out. Even in a city like Sydney where the 2.4GHz spectrum is literally shitted with Access Points, the close-proximity and power output make this more of a Piconet. People sitting directly next to you or around you on a bus or train will be able to use this without packet loss.</p>

<p>Internet access is very reliable, at around Lunch Time in the Sydney CBD (Heavy use period) I got 21 Mbps down and 17 Mbps up on 4G/LTE.</p>

<p>I&rsquo;ve now used it more than a few occasions (Two without modem, one with) and I still have not dropped a Bar of Energy on the Gorilla. This is one Power Efficient setup, let me tell you.</p>

<p>What did impress me was the ability to reach the USB Dongle&rsquo;s management interfaces still.</p>

<p>The USB Dongle will by default make a network of <code>192.168.0.0/24</code>, whereas OpenWRT will have <code>192.168.1.0/24</code>, you can reach the modem still on <code>192.168.0.1</code></p>

<p>Protip:</p>

<p>The ZTE MF823 has Telnet open, here&rsquo;s the creds:</p>

<pre><code>USER: root
PASS: zte9x15
</code></pre>

<p>It has a pretty decent Busybox on it too.</p>

<h3>Weird Quirks</h3>

<p>Sometimes, the USB modem won&rsquo;t show up unless you plug it in after the AP boots. If this happens, just do so and run <code>ifup wan</code> from a root shell on the AP, everything will take care of itself from there.</p>

<p><strong>FIXED</strong></p>

<p>The way to solve this is rather silly, but it does work:</p>

<p>For some reason, the <code>rndis_host</code> module is not loaded into <code>/etc/modules-boot.d</code> to fix this run:</p>

<pre><code>ln -s /etc/modules.d/usb-net-rndis /etc/modules-boot.d/50-usb-net-rndis
</code></pre>

<p>Then in <code>/etc/rc.local</code> add the line <code>/etc/init.d/usbmode restart</code></p>

<p>For some reason, the USB stuff has to be restarted when the Access Point comes online, this might be due to the fact that both the ZTE Modem and the AP power up at the same time, the AP might be ready before the ZTE modem is&hellip; This will refresh stuff and then your <code>usb0</code> interface should pop online at boot!</p>
]]></content>
  </entry>
  
</feed>
